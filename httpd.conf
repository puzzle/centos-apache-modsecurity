# Configuration taken from Christian Folini's tutorials:
# https://www.netnea.com/cms/apache-tutorials/

ServerName        ${SERVER_NAME}
ServerAdmin       root@localhost
ServerRoot        /etc/httpd
User              apache
Group             apache
PidFile           /tmp/httpd.pid

# Provide and include a server.conf if you want to override or add a directive in server context
IncludeOptional   /etc/httpd/conf/server.conf

ServerTokens      Prod
ServerSignature   Off
UseCanonicalName  On
TraceEnable       Off
HostnameLookups   Off
ExtendedStatus    On


Timeout           ${APACHE_TIMEOUT}
MaxRequestWorkers ${APACHE_MAX_REQUEST_WORKERS}

Listen            ${PORT}

LoadModule        mpm_event_module        modules/mod_mpm_event.so
LoadModule        unixd_module            modules/mod_unixd.so

LoadModule        log_config_module       modules/mod_log_config.so
LoadModule        logio_module            modules/mod_logio.so
LoadModule        rewrite_module          modules/mod_rewrite.so

LoadModule        authn_core_module       modules/mod_authn_core.so
LoadModule        authz_core_module       modules/mod_authz_core.so

LoadModule        ssl_module              modules/mod_ssl.so
LoadModule        headers_module          modules/mod_headers.so

LoadModule        unique_id_module        modules/mod_unique_id.so
LoadModule        security2_module        modules/mod_security2.so

LoadModule        proxy_module            modules/mod_proxy.so
LoadModule        proxy_http_module       modules/mod_proxy_http.so
LoadModule        proxy_balancer_module   modules/mod_proxy_balancer.so
LoadModule        lbmethod_byrequests_module modules/mod_lbmethod_byrequests.so
LoadModule        slotmem_shm_module      modules/mod_slotmem_shm.so

LoadModule        setenvif_module         modules/mod_setenvif.so
LoadModule        mime_module             modules/mod_mime.so


ErrorLogFormat          "[%{cu}t] [%-m:%-l] %-a %-L %M"
LogFormat "%h %{GEOIP_COUNTRY_CODE}e %u [%{%Y-%m-%d %H:%M:%S}t.%{usec_frac}t] \"%r\" %>s %b \
\"%{Referer}i\" \"%{User-Agent}i\" \"%{Content-Type}i\" %{remote}p %v %A %p %R \
%{BALANCER_WORKER_ROUTE}e %X \"%{cookie}n\" %{UNIQUE_ID}e %{SSL_PROTOCOL}x %{SSL_CIPHER}x \
%I %O %{ratio}n%% %D %{ModSecTimeIn}e %{ApplicationTime}e %{ModSecTimeOut}e \
%{ModSecAnomalyScoreInPLs}e %{ModSecAnomalyScoreOutPLs}e \
%{ModSecAnomalyScoreIn}e %{ModSecAnomalyScoreOut}e" extended

LogFormat "[%{%Y-%m-%d %H:%M:%S}t.%{usec_frac}t] %{UNIQUE_ID}e %D \
PerfModSecInbound: %{TX.perf_modsecinbound}M \
PerfAppl: %{TX.perf_application}M \
PerfModSecOutbound: %{TX.perf_modsecoutbound}M \
TS-Phase1: %{TX.ModSecTimestamp1start}M-%{TX.ModSecTimestamp1end}M \
TS-Phase2: %{TX.ModSecTimestamp2start}M-%{TX.ModSecTimestamp2end}M \
TS-Phase3: %{TX.ModSecTimestamp3start}M-%{TX.ModSecTimestamp3end}M \
TS-Phase4: %{TX.ModSecTimestamp4start}M-%{TX.ModSecTimestamp4end}M \
TS-Phase5: %{TX.ModSecTimestamp5start}M-%{TX.ModSecTimestamp5end}M \
Perf-Phase1: %{PERF_PHASE1}M \
Perf-Phase2: %{PERF_PHASE2}M \
Perf-Phase3: %{PERF_PHASE3}M \
Perf-Phase4: %{PERF_PHASE4}M \
Perf-Phase5: %{PERF_PHASE5}M \
Perf-ReadingStorage: %{PERF_SREAD}M \
Perf-WritingStorage: %{PERF_SWRITE}M \
Perf-GarbageCollection: %{PERF_GC}M \
Perf-ModSecLogging: %{PERF_LOGGING}M \
Perf-ModSecCombined: %{PERF_COMBINED}M" perflog

LogLevel                      ${APACHE_LOGLEVEL}
ErrorLog                      ${APACHE_ERRORLOG}
CustomLog                     ${APACHE_ACCESSLOG} ${APACHE_ACCESSLOG_FORMAT} env=!kubeprobe
#CustomLog                     ${APACHE_PERFLOG}

TypesConfig                   /etc/mime.types


RewriteEngine                 On
RewriteOptions                InheritDownBefore
ProxyErrorOverride             On

DocumentRoot                  /var/www/html/

ErrorDocument 400             /error/400.html
ErrorDocument 403             /error/403.html
ErrorDocument 404             /error/404.html
ErrorDocument 413             /error/413.html
ErrorDocument 422             /error/422.html
ErrorDocument 500             /error/500.html
ErrorDocument 502             /error/502.html
ErrorDocument 503             /error/503.html

RewriteRule   ^/error/.*$     -       [END]
RewriteRule   ^/waf-healthz$  -       [END]


# Don't log requests from local remote hosts and User-Agent kube-probe.* in accesslog
SetEnvIfExpr "-R '10.0.0.0/8' || -R '172.16.0.0/12' || -R '192.168.0.0/16'" privateaddress
SetEnvIf User-Agent "kube-probe.*" kubeprobe
SetEnvIf kubeprobe 0 !privateaddress

# == Set Security Headers
Header    always    setifempty    Strict-Transport-Security "max-age=31536000; includeSubDomains"
Header    always    setifempty    X-Frame-Options SAMEORIGIN
Header    always    setifempty    X-XSS-Protection "1; mode=block"
Header    always    setifempty    Referrer-Policy "strict-origin-when-cross-origin"
Header    always    setifempty    X-Content-Type-Options "nosniff"




# == ModSec Base Configuration

SecRuleEngine                 ${SECRULEENGINE}

SecRequestBodyAccess          ${REQ_BODY_ACCESS}
SecRequestBodyLimit           ${REQ_BODY_LIMIT}
SecRequestBodyNoFilesLimit    ${REQ_BODY_NOFILES_LIMIT}

SecResponseBodyAccess         ${RESP_BODY_ACCESS} 
SecResponseBodyLimit          ${RESP_BODY_LIMIT}

SecPcreMatchLimit             ${PCRE_MATCH_LIMIT}
SecPcreMatchLimitRecursion    ${PCRE_MATCH_LIMIT_RECURSION}

SecTmpDir                     ${MODSEC_TMP_DIR}
SecUploadDir                  ${MODSEC_UPLOAD_DIR}
SecDataDir                    ${MODSEC_DATA_DIR}

SecDebugLog                   ${MODSEC_DEBUG_LOG}
SecDebugLogLevel              ${MODSEC_DEBUG_LOGLEVEL}

SecAuditEngine                RelevantOnly
SecAuditLogRelevantStatus     "^(?:5|4(?!04))"
SecAuditLogParts              ${MODSEC_AUDIT_LOGPARTS}

SecAuditLogType               ${MODSEC_AUDIT_LOGTYPE}
SecAuditLog                   ${MODSEC_AUDIT_LOG}
SecAuditLogStorageDir         ${MODSEC_AUDIT_STORAGE}
SecAuditLogFormat             ${MODSEC_AUDIT_LOGFORMAT}

SecDefaultAction              "phase:2,pass,log"


# == ModSec Rule ID Namespace Definition
# Service-specific before Core-Rules:    10000 -  49999
#  - Puzzle Standard Exclusions          10000 -  19999
#  - Service Specific Exclusions         20000 -  49999
# Service-specific after Core-Rules:     50000 -  79999
# Locally shared rules:                  80000 -  99999
#  - Performance:                        90000 -  90199
# Recommended ModSec Rules (few):       200000 - 200010
# OWASP Core-Rules:                     900000 - 999999


# === ModSec timestamps at the start of each phase (ids: 90000 - 90009)

SecAction "id:90000,phase:1,nolog,pass,setvar:TX.ModSecTimestamp1start=%{DURATION}"
SecAction "id:90001,phase:2,nolog,pass,setvar:TX.ModSecTimestamp2start=%{DURATION}"
SecAction "id:90002,phase:3,nolog,pass,setvar:TX.ModSecTimestamp3start=%{DURATION}"
SecAction "id:90003,phase:4,nolog,pass,setvar:TX.ModSecTimestamp4start=%{DURATION}"
SecAction "id:90004,phase:5,nolog,pass,setvar:TX.ModSecTimestamp5start=%{DURATION}"
                      
# SecRule REQUEST_FILENAME "@beginsWith /" \
#    "id:90005,phase:5,t:none,nolog,noauditlog,pass,setenv:write_perflog"



# === ModSec Recommended Rules (in modsec src package) (ids: 200000-200010)

SecRule REQUEST_HEADERS:Content-Type "(?:application(?:/soap\+|/)|text/)xml" \
  "id:200000,phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=XML"

SecRule REQUEST_HEADERS:Content-Type "application/json" \
  "id:200001,phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=JSON"

SecRule REQBODY_ERROR "!@eq 0" \
  "id:200002,phase:2,t:none,deny,status:400,log,msg:'Failed to parse request body.',\
logdata:'%{reqbody_error_msg}',severity:2"

SecRule MULTIPART_STRICT_ERROR "!@eq 0" \
"id:200003,phase:2,t:none,log,deny,status:403, \
msg:'Multipart request body failed strict validation: \
PE %{REQBODY_PROCESSOR_ERROR}, \
BQ %{MULTIPART_BOUNDARY_QUOTED}, \
BW %{MULTIPART_BOUNDARY_WHITESPACE}, \
DB %{MULTIPART_DATA_BEFORE}, \
DA %{MULTIPART_DATA_AFTER}, \
HF %{MULTIPART_HEADER_FOLDING}, \
LF %{MULTIPART_LF_LINE}, \
SM %{MULTIPART_MISSING_SEMICOLON}, \
IQ %{MULTIPART_INVALID_QUOTING}, \
IP %{MULTIPART_INVALID_PART}, \
IH %{MULTIPART_INVALID_HEADER_FOLDING}, \
FL %{MULTIPART_FILE_LIMIT_EXCEEDED}'"

SecRule TX:/^MSC_/ "!@streq 0" \
  "id:200005,phase:2,t:none,deny,status:500,\
  msg:'ModSecurity internal error flagged: %{MATCHED_VAR_NAME}'"


# === ModSec Core Rules Base Configuration (ids: 900000-900999)

Include    /etc/httpd/modsecurity/owasp-crs/crs-setup-customizable.conf

# === ModSec Core Rules: Runtime Exclusion Rules (ids: 10000-49999)

# Puzzle Standard Exclusions (ids: 10000 - 19999)
IncludeOptional   /etc/httpd/modsecurity/puzzle/custom-before-crs/*.conf

# Service Specific Exclusions (ids: 20000 - 49999)
IncludeOptional   /etc/httpd/modsecurity/service/custom-before-crs/*.conf


# === ModSecurity Core Rules Inclusion

Include    /etc/httpd/modsecurity/owasp-crs/rules/*.conf


# === ModSec Core Rules: Startup Time Rules Exclusions

IncludeOptional   /etc/httpd/modsecurity/puzzle/custom-after-crs/*.conf
IncludeOptional   /etc/httpd/modsecurity/service/custom-after-crs/*.conf


# === ModSec timestamps at the end of each phase (ids: 90010 - 90019)

SecAction "id:90010,phase:1,pass,nolog,setvar:TX.ModSecTimestamp1end=%{DURATION}"
SecAction "id:90011,phase:2,pass,nolog,setvar:TX.ModSecTimestamp2end=%{DURATION}"
SecAction "id:90012,phase:3,pass,nolog,setvar:TX.ModSecTimestamp3end=%{DURATION}"
SecAction "id:90013,phase:4,pass,nolog,setvar:TX.ModSecTimestamp4end=%{DURATION}"
SecAction "id:90014,phase:5,pass,nolog,setvar:TX.ModSecTimestamp5end=%{DURATION}"


# === ModSec performance calculations and variable export (ids: 90100 - 90199)

SecAction "id:90100,phase:5,pass,nolog,\
  setvar:TX.perf_modsecinbound=%{PERF_PHASE1},\
  setvar:TX.perf_modsecinbound=+%{PERF_PHASE2},\
  setvar:TX.perf_application=%{TX.ModSecTimestamp3start},\
  setvar:TX.perf_application=-%{TX.ModSecTimestamp2end},\
  setvar:TX.perf_modsecoutbound=%{PERF_PHASE3},\
  setvar:TX.perf_modsecoutbound=+%{PERF_PHASE4},\
  setenv:ModSecTimeIn=%{TX.perf_modsecinbound},\
  setenv:ApplicationTime=%{TX.perf_application},\
  setenv:ModSecTimeOut=%{TX.perf_modsecoutbound},\
  setenv:ModSecAnomalyScoreInPLs=%{tx.anomaly_score_pl1}-%{tx.anomaly_score_pl2}-%{tx.anomaly_score_pl3}-%{tx.anomaly_score_pl4},\
  setenv:ModSecAnomalyScoreOutPLs=%{tx.outbound_anomaly_score_pl1}-%{tx.outbound_anomaly_score_pl2}-%{tx.outbound_anomaly_score_pl3}-%{tx.outbound_anomaly_score_pl4},\
  setenv:ModSecAnomalyScoreIn=%{TX.anomaly_score},\
  setenv:ModSecAnomalyScoreOut=%{TX.outbound_anomaly_score}"

# === ModSec finished

SSLCertificateKeyFile   /etc/ssl/certs/tls.key
SSLCertificateFile      /etc/ssl/certs/tls.crt

SSLProtocol             All -SSLv2 -SSLv3 -TLSv1 -TLSv1.1
SSLCipherSuite          'kEECDH+ECDSA kEECDH kEDH HIGH +SHA !aNULL !eNULL !LOW !MEDIUM !MD5 !EXP !DSS !PSK !SRP !kECDH !CAMELLIA !RC4'
SSLHonorCipherOrder     On

SSLRandomSeed           startup file:/dev/urandom 2048
SSLRandomSeed           connect builtin

<Directory />
      
      Require all denied

      Options SymLinksIfOwnerMatch

</Directory>

<VirtualHost *:${PORT}>
    # Provide and include a virtualhost.conf if you want to override or add a directive in virtualhost context
    IncludeOptional   /etc/httpd/conf/virtualhost.conf

    ServerName        ${SERVER_NAME}

    SSLEngine On

    SSLProxyEngine            On
    ProxyTimeout              ${PROXY_TIMEOUT}
    ProxyErrorOverride        On
    ProxyPreserveHost         On

    RewriteEngine             On

    RewriteRule               ^/(.*)$  ${BACKEND}/$1 [proxy,last]
    ProxyPassReverse          /        ${BACKEND}/

    <Proxy ${BACKEND}>
        # Provide and include a proxy.conf if you want to override or add a directive in proxy context
        IncludeOptional   /etc/httpd/conf/proxy.conf

        ProxySet keepalive=On

        Require all granted

        Options None

        ProxySet enablereuse=on

    </Proxy>

    <Directory /var/www/html/>

        Require all granted

        Options None

    </Directory>

</VirtualHost>
